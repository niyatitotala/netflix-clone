{"version":3,"sources":["axios.js","Components/Row.js","Components/Nav.js","requests.js","Components/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","backdrop_path","src","poster_path","alt","name","onClick","videoId","opts","height","width","playerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","API_KEY","requests","fetchPopular","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdropPosition","original_name","overview","substr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49b2dd1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\" ; \r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // Options for react-youtube\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = async (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      let trailerurl = await axios.get(\r\n        `/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\r\n      );\r\n      setTrailerUrl(trailerurl.data.results[0]?.key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row_posters\">\r\n        {movies.map(\r\n          (movie) =>\r\n            movie.backdrop_path !== null && (\r\n              <img\r\n                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                src={`${baseImgUrl}${\r\n                  isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                }`}\r\n                alt={movie.name}\r\n                key={movie.id}\r\n                onClick={() => handleClick(movie)}\r\n              />\r\n            )\r\n        )}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","const API_KEY = \"2ec840c6536457340ba67270100d37d6\";\r\n\r\nconst requests = {\r\n    fetchPopular: `/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchPopular);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n        backdropPosition: \"center center\",\r\n      }}\r\n    >\r\n      {/* Background image */}\r\n      <div className=\"banner_contents\">\r\n        {/* title */}\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        {/* 2 buttons */}\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List </button>\r\n        </div>\r\n\r\n        {/* description */}\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview, 200)}</h1>\r\n      </div>\r\n      <div className=\"banner_fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Components/Row\";\nimport Nav from \"./Components/Nav\";\nimport Banner from \"./Components/Banner\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Popular Movies\" fetchUrl={requests.fetchPopular}/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}